$date
	Mon Jan  3 21:48:58 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module bits_testbench $end
$var wire 32 ! expectedBytes [31:0] $end
$var wire 1 " smem_web $end
$var wire 96 # smem_wdata [95:0] $end
$var wire 96 $ smem_rdata [95:0] $end
$var wire 1 % smem_ceb $end
$var wire 14 & smem_addr [13:0] $end
$var wire 1 ' resetB $end
$var wire 1 ( pwrite $end
$var wire 32 ) pwdata [31:0] $end
$var wire 1 * psel $end
$var wire 32 + prdata [31:0] $end
$var wire 1 , penable $end
$var wire 8 - paddr [7:0] $end
$var wire 1 . imem_web $end
$var wire 32 / imem_rdata [31:0] $end
$var wire 1 0 imem_ceb $end
$var wire 10 1 imem_addr [9:0] $end
$var wire 1 2 clk $end
$var reg 64 3 bits_value [63:0] $end
$var reg 32 4 rdata [31:0] $end
$var reg 16 5 version_sum [15:0] $end
$scope module apb_driver $end
$var wire 32 6 prdata [31:0] $end
$var wire 1 2 clk $end
$var reg 8 7 paddr [7:0] $end
$var reg 1 , penable $end
$var reg 1 * psel $end
$var reg 32 8 pwdata [31:0] $end
$var reg 1 ( pwrite $end
$scope task idle $end
$upscope $end
$scope task read $end
$var reg 8 9 addr [7:0] $end
$var reg 32 : data [31:0] $end
$upscope $end
$scope task write $end
$var reg 8 ; addr [7:0] $end
$var reg 32 < data [31:0] $end
$upscope $end
$upscope $end
$scope module bits_top $end
$var wire 6 = paddr [7:2] $end
$var wire 1 , penable $end
$var wire 1 > pready $end
$var wire 1 * psel $end
$var wire 1 ? pslverr $end
$var wire 32 @ pwdata [31:0] $end
$var wire 1 ( pwrite $end
$var wire 16 A version_sum [15:0] $end
$var wire 1 B start $end
$var wire 1 " smem_web $end
$var wire 96 C smem_wdata [95:0] $end
$var wire 96 D smem_rdata [95:0] $end
$var wire 1 % smem_ceb $end
$var wire 14 E smem_addr [13:0] $end
$var wire 1 ' resetB $end
$var wire 32 F prdata [31:0] $end
$var wire 1 G mem_req_b $end
$var wire 1 H mem_ack_b $end
$var wire 128 I instruction_word [127:0] $end
$var wire 16 J instruction_valid_bytes [15:0] $end
$var wire 1 . imem_web $end
$var wire 32 K imem_rdata [31:0] $end
$var wire 1 0 imem_ceb $end
$var wire 10 L imem_addr [9:0] $end
$var wire 16 M expectedBytes [15:0] $end
$var wire 1 N done_reading_memory $end
$var wire 1 O done $end
$var wire 1 2 clk $end
$var wire 64 P bits_value [63:0] $end
$scope module bits_core $end
$var wire 16 Q version_sum [15:0] $end
$var wire 16 R validNibbles [15:0] $end
$var wire 1 B start $end
$var wire 1 S space_available $end
$var wire 1 " smem_web $end
$var wire 96 T smem_wdata [95:0] $end
$var wire 96 U smem_rdata [95:0] $end
$var wire 1 % smem_ceb $end
$var wire 14 V smem_addr [13:0] $end
$var wire 1 ' resetB $end
$var wire 64 W number [63:0] $end
$var wire 1 G mem_req_b $end
$var wire 1 H mem_ack_b $end
$var wire 128 X instruction_word [127:0] $end
$var wire 5 Y instruction_process [4:0] $end
$var wire 256 Z instruction_cache_word [255:0] $end
$var wire 16 [ instruction_byte_valid [15:0] $end
$var wire 16 \ expectedBytes [15:0] $end
$var wire 80 ] encoded_number [79:0] $end
$var wire 1 N done_reading_memory $end
$var wire 1 O done $end
$var wire 1 ^ decode_number $end
$var wire 1 2 clk $end
$var wire 64 _ bits_value [63:0] $end
$scope module bits_fsm $end
$var wire 3 ` version_sum_current [2:0] $end
$var wire 16 a validNibbles [15:0] $end
$var wire 4 b validNibbleCount [3:0] $end
$var wire 1 B start $end
$var wire 1 c stack_is_empty $end
$var wire 1 S space_available $end
$var wire 96 d smem_rdata [95:0] $end
$var wire 1 ' resetB $end
$var wire 3 e packet_type [2:0] $end
$var wire 1 H mem_ack_b $end
$var wire 1 f literal_packet $end
$var wire 128 g instruction_word [127:0] $end
$var wire 256 h instruction_cache_word [255:0] $end
$var wire 16 i instruction_byte_valid [15:0] $end
$var wire 1 N done_reading_memory $end
$var wire 64 j decodedNumber [63:0] $end
$var wire 1 2 clk $end
$var reg 64 k bits_value [63:0] $end
$var reg 64 l bits_value_next [63:0] $end
$var reg 1 ^ decodeNumber $end
$var reg 1 m decodeNumber_next $end
$var reg 1 O done $end
$var reg 1 n done_next $end
$var reg 1 o done_reading_memory_reg $end
$var reg 80 p encoded_number [79:0] $end
$var reg 80 q encoded_number_next [79:0] $end
$var reg 5 r instruction_process [4:0] $end
$var reg 5 s instruction_process_next [4:0] $end
$var reg 1 t literal_packet_reg $end
$var reg 1 u literal_packet_reg_next $end
$var reg 1 G mem_req_b $end
$var reg 1 v mem_req_b_next $end
$var reg 15 w parent_packet_id [14:0] $end
$var reg 15 x parent_packet_id_next [14:0] $end
$var reg 14 y smem_addr [13:0] $end
$var reg 14 z smem_addr_next [13:0] $end
$var reg 1 % smem_ceb $end
$var reg 1 { smem_ceb_next $end
$var reg 96 | smem_wdata [95:0] $end
$var reg 96 } smem_wdata_next [95:0] $end
$var reg 1 " smem_web $end
$var reg 1 ~ smem_web_next $end
$var reg 4 !" state [3:0] $end
$var reg 4 "" state_next [3:0] $end
$var reg 15 #" this_packet_id [14:0] $end
$var reg 15 $" this_packet_id_next [14:0] $end
$var reg 16 %" version_sum [15:0] $end
$var reg 16 &" version_sum_next [15:0] $end
$upscope $end
$scope module bits_instruction_cache $end
$var wire 5 '" instruction_process [4:0] $end
$var wire 1 G mem_req_b $end
$var wire 16 (" valid_bytes [15:0] $end
$var wire 1 S space_available $end
$var wire 1 ' resetB $end
$var wire 1 H mem_ack_b $end
$var wire 128 )" instruction_word [127:0] $end
$var wire 1 2 clk $end
$var reg 256 *" instruction_cache [255:0] $end
$var reg 256 +" instruction_cache_next [255:0] $end
$var reg 9 ," instruction_size [8:0] $end
$var reg 9 -" instruction_size_next [8:0] $end
$var reg 5 ." instruction_size_read [4:0] $end
$var reg 3 /" state [2:0] $end
$var reg 3 0" state_next [2:0] $end
$upscope $end
$scope module number_decoder $end
$var wire 1 ^ enable $end
$var wire 80 1" numberFromBits [79:0] $end
$var wire 16 2" validNibbles [15:0] $end
$var wire 1 ' resetB $end
$var wire 64 3" number [63:0] $end
$var wire 16 4" nibbleChain [15:0] $end
$var wire 64 5" data [63:0] $end
$var wire 1 2 clk $end
$var wire 7 6" bitsToShift [6:0] $end
$scope module number_brian $end
$var wire 1 ^ enable $end
$var wire 64 7" inputNumber [63:0] $end
$var wire 64 8" sixteenNibblesEnabled [63:0] $end
$var wire 17 9" validNibbles [16:0] $end
$var wire 64 :" twoNibblesEnabled [63:0] $end
$var wire 64 ;" twelveNibblesEnabled [63:0] $end
$var wire 64 <" threeNibblesEnabled [63:0] $end
$var wire 64 =" thirteenNibblesEnabled [63:0] $end
$var wire 64 >" tenNibblesEnabled [63:0] $end
$var wire 64 ?" sixNibblesEnabled [63:0] $end
$var wire 64 @" sevenNibblesEnabled [63:0] $end
$var wire 1 ' resetB $end
$var wire 64 A" oneNibbleEnabled [63:0] $end
$var wire 64 B" nineNibblesEnabled [63:0] $end
$var wire 64 C" fourteenNibblesEnabled [63:0] $end
$var wire 64 D" fourNibblesEnabled [63:0] $end
$var wire 64 E" fiveNibblesEnabled [63:0] $end
$var wire 64 F" fifteenNibblesEnabled [63:0] $end
$var wire 64 G" elevenNibblesEnabled [63:0] $end
$var wire 64 H" eightNibblesEnabled [63:0] $end
$var wire 1 2 clk $end
$var reg 7 I" bitsToShift [6:0] $end
$var reg 7 J" bitsToShiftNext [6:0] $end
$var reg 64 K" dataNext [63:0] $end
$var reg 64 L" number [63:0] $end
$upscope $end
$scope module number_decoder_nibble00 $end
$var wire 5 M" code [4:0] $end
$var wire 1 N" next_nibble_valid $end
$var wire 4 O" nibble [3:0] $end
$var wire 1 P" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble01 $end
$var wire 5 Q" code [4:0] $end
$var wire 1 R" next_nibble_valid $end
$var wire 4 S" nibble [3:0] $end
$var wire 1 T" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble02 $end
$var wire 5 U" code [4:0] $end
$var wire 1 V" next_nibble_valid $end
$var wire 4 W" nibble [3:0] $end
$var wire 1 X" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble04 $end
$var wire 5 Y" code [4:0] $end
$var wire 1 Z" next_nibble_valid $end
$var wire 4 [" nibble [3:0] $end
$var wire 1 \" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble05 $end
$var wire 5 ]" code [4:0] $end
$var wire 1 ^" next_nibble_valid $end
$var wire 4 _" nibble [3:0] $end
$var wire 1 `" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble06 $end
$var wire 5 a" code [4:0] $end
$var wire 1 b" next_nibble_valid $end
$var wire 4 c" nibble [3:0] $end
$var wire 1 d" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble07 $end
$var wire 5 e" code [4:0] $end
$var wire 1 f" next_nibble_valid $end
$var wire 4 g" nibble [3:0] $end
$var wire 1 h" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble08 $end
$var wire 5 i" code [4:0] $end
$var wire 1 j" next_nibble_valid $end
$var wire 4 k" nibble [3:0] $end
$var wire 1 l" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble09 $end
$var wire 5 m" code [4:0] $end
$var wire 1 n" next_nibble_valid $end
$var wire 4 o" nibble [3:0] $end
$var wire 1 p" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble10 $end
$var wire 5 q" code [4:0] $end
$var wire 1 r" next_nibble_valid $end
$var wire 4 s" nibble [3:0] $end
$var wire 1 t" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble11 $end
$var wire 5 u" code [4:0] $end
$var wire 1 v" next_nibble_valid $end
$var wire 4 w" nibble [3:0] $end
$var wire 1 x" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble12 $end
$var wire 5 y" code [4:0] $end
$var wire 1 z" next_nibble_valid $end
$var wire 4 {" nibble [3:0] $end
$var wire 1 |" this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble13 $end
$var wire 5 }" code [4:0] $end
$var wire 1 ~" next_nibble_valid $end
$var wire 4 !# nibble [3:0] $end
$var wire 1 "# this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble14 $end
$var wire 5 ## code [4:0] $end
$var wire 1 $# next_nibble_valid $end
$var wire 4 %# nibble [3:0] $end
$var wire 1 &# this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble15 $end
$var wire 5 '# code [4:0] $end
$var wire 1 (# next_nibble_valid $end
$var wire 4 )# nibble [3:0] $end
$var wire 1 *# this_nibble_valid $end
$upscope $end
$scope module number_decoder_nibble3 $end
$var wire 5 +# code [4:0] $end
$var wire 1 ,# next_nibble_valid $end
$var wire 4 -# nibble [3:0] $end
$var wire 1 .# this_nibble_valid $end
$upscope $end
$upscope $end
$upscope $end
$scope module bits_regs $end
$var wire 1 /# bits_enable $end
$var wire 64 0# bits_value [63:0] $end
$var wire 1 O done $end
$var wire 6 1# paddr [7:2] $end
$var wire 1 , penable $end
$var wire 1 2# pready $end
$var wire 1 * psel $end
$var wire 1 3# pslverr $end
$var wire 32 4# pwdata [31:0] $end
$var wire 1 ( pwrite $end
$var wire 1 5# read_cycle $end
$var wire 16 6# version_sum [15:0] $end
$var wire 1 7# write_cycle $end
$var wire 1 ' resetB $end
$var wire 1 2 clk $end
$var reg 64 8# bits_value_latched [63:0] $end
$var reg 1 9# done_latched $end
$var reg 16 :# expected_bytes [15:0] $end
$var reg 32 ;# prdata [31:0] $end
$var reg 1 B start $end
$var reg 16 <# version_sum_latched [15:0] $end
$upscope $end
$scope module imem_controller $end
$var wire 16 =# expectedBytes [15:0] $end
$var wire 1 G mem_req_b $end
$var wire 1 ' resetB $end
$var wire 32 ># imem_rdata [31:0] $end
$var wire 1 2 clk $end
$var reg 17 ?# byteCounter [16:0] $end
$var reg 17 @# byteCounter_next [16:0] $end
$var reg 1 N done_reading_memory $end
$var reg 1 A# done_reading_memory_next $end
$var reg 10 B# imem_addr [9:0] $end
$var reg 10 C# imem_addr_next [9:0] $end
$var reg 1 0 imem_ceb $end
$var reg 1 D# imem_ceb_next $end
$var reg 1 . imem_web $end
$var reg 1 E# imem_web_next $end
$var reg 16 F# instruction_valid_bytes [15:0] $end
$var reg 16 G# instruction_valid_bytes_next [15:0] $end
$var reg 128 H# instruction_word [127:0] $end
$var reg 128 I# instruction_word_next [127:0] $end
$var reg 1 H mem_ack_b $end
$var reg 1 J# mem_ack_b_next $end
$var reg 4 K# state [3:0] $end
$var reg 4 L# state_next [3:0] $end
$upscope $end
$upscope $end
$scope module clk_generator $end
$var reg 1 2 clk $end
$upscope $end
$scope module imem $end
$var wire 10 M# addr [9:0] $end
$var wire 1 0 ceb $end
$var wire 1 2 clk $end
$var wire 32 N# wdata [31:0] $end
$var wire 1 . web $end
$var reg 32 O# rdata [31:0] $end
$upscope $end
$scope module reset_generator $end
$var wire 1 2 clk $end
$var reg 5 P# counter [4:0] $end
$var reg 1 ' resetB $end
$upscope $end
$scope module smem $end
$var wire 14 Q# addr [13:0] $end
$var wire 1 % ceb $end
$var wire 1 2 clk $end
$var wire 96 R# wdata [95:0] $end
$var wire 1 " web $end
$var reg 96 S# rdata [95:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx S#
bx R#
bx Q#
b1010 P#
bx O#
b0 N#
bx M#
bx L#
bx K#
xJ#
bx I#
bx H#
bx G#
bx F#
xE#
xD#
bx C#
bx B#
xA#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
x9#
bx 8#
x7#
bx 6#
x5#
bx 4#
03#
12#
bx 1#
bx 0#
0/#
x.#
bx -#
x,#
bx +#
1*#
bx )#
x(#
bx '#
x&#
bx %#
x$#
bx ##
x"#
bx !#
x~"
bx }"
x|"
bx {"
xz"
bx y"
xx"
bx w"
xv"
bx u"
xt"
bx s"
xr"
bx q"
xp"
bx o"
xn"
bx m"
xl"
bx k"
xj"
bx i"
xh"
bx g"
xf"
bx e"
xd"
bx c"
xb"
bx a"
x`"
bx _"
x^"
bx ]"
x\"
bx ["
xZ"
bx Y"
xX"
bx W"
xV"
bx U"
xT"
bx S"
xR"
bx Q"
xP"
bx O"
xN"
bx M"
bx L"
b0xxxx K"
b101 J"
bx I"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx H"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx G"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx F"
b0xxxxxxxxxxxxxxxxxxxx E"
b0xxxxxxxxxxxxxxxx D"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx B"
b0xxxx A"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxx @"
b0xxxxxxxxxxxxxxxxxxxxxxxx ?"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx >"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ="
b0xxxxxxxxxxxx <"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ;"
b0xxxxxxxx :"
bx1 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx1 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
x~
bx }
bx |
x{
bx z
bx y
bx x
bx w
xv
xu
xt
bx s
bx r
bx q
bx p
xo
xn
xm
bx l
bx k
bx j
bx i
bx h
bx g
xf
bx e
bx d
xc
bx b
bx1 a
bx `
bx _
x^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
xS
bx1 R
bx Q
bx P
xO
xN
bx M
bx L
bx K
bx J
bx I
xH
xG
bx F
bx E
bx D
bx C
xB
bx A
bx @
z?
z>
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
b0 4
bx 3
02
bx 1
x0
bx /
x.
bx -
x,
bx +
x*
bx )
x(
x'
bx &
x%
bx $
bx #
x"
b11 !
$end
#5
b11111 s
0m
1v
0B
12
#10
1'
02
#15
1J#
0A#
1E#
1D#
b11111 Y
b11111 r
b11111 '"
1G
0^
12
#20
b0 b
b0 K"
0&#
b0 A"
0"#
b0 :"
0|"
b0 <"
0x"
b0 D"
0t"
b0 E"
0p"
b0 ?"
0l"
b0 @"
0h"
b0 H"
0d"
b0 B"
0`"
b0 >"
0\"
b0 G"
0.#
b0 ;"
0X"
b0 ="
0T"
b0 C"
0P"
b1 R
b1 a
b1 2"
b0 F"
0(#
b0 )#
0$#
b0 %#
0~"
b0 !#
0z"
b0 {"
0v"
b0 w"
0r"
b0 s"
0n"
b0 o"
0j"
b0 k"
0f"
b0 g"
0b"
b0 c"
0^"
b0 _"
0Z"
b0 ["
0,#
b0 -#
0V"
b0 W"
0R"
b0 S"
b1 9"
b0 4"
0N"
b0 8"
b0 5"
b0 7"
b0 O"
b0 ."
b0 G#
b0 I#
b0 @#
b0 C#
b0 L#
b0 '#
b0 ##
b0 }"
b0 y"
b0 u"
b0 q"
b0 m"
b0 i"
b0 e"
b0 a"
b0 ]"
b0 Y"
b0 +#
b0 U"
b0 Q"
b0 M"
b0 +
b0 6
b0 F
b0 ;#
0f
b0 e
b0 `
b0 -"
b0 +"
0u
b0 }
1~
1{
b0 z
b0 q
b0 &"
b0 ""
0n
b0 l
b0 M
b0 \
b0 :#
b0 =#
b0 8#
b0 <#
09#
b0 J
b0 [
b0 i
b0 ("
b0 F#
0N
b0 I
b0 X
b0 g
b0 )"
b0 H#
b0 1
b0 L
b0 B#
b0 M#
1.
10
b0 ?#
b0 K#
0t
0o
b0 !"
b0 ]
b0 p
b0 1"
b0 A
b0 Q
b0 %"
b0 6#
b0 P
b0 _
b0 k
b0 0#
0O
b0 #
b0 C
b0 T
b0 |
b0 R#
1c
b0 &
b0 E
b0 V
b0 y
b0 Q#
1"
1%
1S
b0 ,"
b0 /"
b0 Z
b0 h
b0 *"
b0 6"
b0 I"
b0 W
b0 j
b0 3"
b0 L"
b0 x
b0 $"
b0 #"
b0 w
0'
02
#25
b1001 P#
12
#30
02
#35
b1000 P#
12
#40
02
#45
b111 P#
12
#50
02
#55
b110 P#
12
#60
02
#65
b101 P#
12
#70
02
#75
b100 P#
12
#80
02
#85
b11 P#
12
#90
02
#95
b10 P#
12
#100
02
#105
b1 P#
12
#110
02
#115
b0 P#
12
#120
1'
02
#125
bx /"
1H
12
#130
02
#135
12
#140
05#
b0 =
b0 1#
07#
b0 )
b0 8
b0 @
b0 4#
b0 -
b0 7
0(
0,
0*
02
#145
12
#150
b11 <
b100 ;
02
#155
12
#160
b1 =
b1 1#
b11 )
b11 8
b11 @
b11 4#
b100 -
b100 7
1(
1*
02
#165
b11 M
b11 \
b11 :#
b11 =#
12
#170
17#
1,
02
#175
12
#180
b0 =
b0 1#
07#
b0 )
b0 8
b0 @
b0 4#
b0 -
b0 7
0(
0,
0*
02
#185
12
#190
b1 <
b0 ;
02
#195
12
#200
b1 )
b1 8
b1 @
b1 4#
1(
1*
02
#205
b1 ""
0v
1B
12
#210
17#
1,
02
#215
b100 @#
0D#
b1 L#
0v
0G
b1 !"
12
#220
07#
b0 )
b0 8
b0 @
b0 4#
0(
0,
0*
02
#225
b10 L#
1D#
0v
00
b100 ?#
b1 K#
0B
12
#230
02
#235
b1111000000000000 G#
b11010010111111100010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 I#
0J#
1A#
b1111 L#
b11010010111111100010100000000000 /
b11010010111111100010100000000000 K
b11010010111111100010100000000000 >#
b11010010111111100010100000000000 O#
10
b10 K#
12
#240
02
#245
b100000 -"
b100 ."
b10 ""
1v
b1101001011111110001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 +"
1J#
0A#
b1111000000000000 J
b1111000000000000 [
b1111000000000000 i
b1111000000000000 ("
b1111000000000000 F#
0H
1N
b11010010111111100010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 I
b11010010111111100010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 X
b11010010111111100010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 g
b11010010111111100010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )"
b11010010111111100010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 H#
b1111 K#
12
#250
02
#255
1f
b100 e
b110 `
b11 ""
b10111111100010100000000000000000000000000000000000000000000000000000000000000000 q
1H
0N
1o
1G
b10 !"
b100000 ,"
b1101001011111110001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 Z
b1101001011111110001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 h
b1101001011111110001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 *"
12
#260
b0 9
02
#265
b101 !#
1"#
1$#
b1110 %#
b10 b
1&#
b111 R
b111 a
b111 2"
b1111 J"
b11111100101 K"
b111 A"
b1111110 :"
b11111100101 <"
b111111001010000 D"
b1111110010100000000 E"
b11111100101000000000000 ?"
b111111001010000000000000000 @"
b1111110010100000000000000000000 H"
b11111100101000000000000000000000000 B"
b111111001010000000000000000000000000000 >"
b1111110010100000000000000000000000000000000 G"
b11111100101000000000000000000000000000000000000 ;"
b111111001010000000000000000000000000000000000000000 ="
b1111110010100000000000000000000000000000000000000000000 C"
b11111100101000000000000000000000000000000000000000000000000 F"
b111 9"
b11 4"
1(#
b111111001010000000000000000000000000000000000000000000000000000 8"
b111111001010000000000000000000000000000000000000000000000000000 5"
b111111001010000000000000000000000000000000000000000000000000000 7"
b111 )#
b10 s
b100 ""
1m
1u
b110 &"
b10111 '#
b11110 ##
b101 }"
b11 !"
b10111111100010100000000000000000000000000000000000000000000000000000000000000000 ]
b10111111100010100000000000000000000000000000000000000000000000000000000000000000 p
b10111111100010100000000000000000000000000000000000000000000000000000000000000000 1"
12
#270
1*
02
#275
b1011 -"
b0 +"
b1000 ""
b11111 s
0m
1t
b10 Y
b10 r
b10 '"
b100 !"
1^
b110 A
b110 Q
b110 %"
b110 6#
12
#280
15#
1,
02
#285
0f
b0 e
b0 `
0~
0{
b11111100101 }
b1001 ""
b0 q
b1111 6"
b1111 I"
b11111100101 W
b11111100101 j
b11111100101 3"
b11111100101 L"
b1011 ,"
b0 Z
b0 h
b0 *"
b11111 Y
b11111 r
b11111 '"
b1000 !"
0^
12
#286
b0 :
#290
05#
0,
0*
02
#295
b0 b
0&#
b0 A"
0"#
b1 R
b1 a
b1 2"
b0 :"
b101 J"
b0 K"
b0 <"
b0 D"
b0 E"
b0 ?"
b0 @"
b0 H"
b0 B"
b0 >"
b0 G"
b0 ;"
b0 ="
b0 C"
b0 F"
0(#
b0 )#
b1 9"
b0 4"
0$#
b0 %#
b0 8"
b0 5"
b0 7"
b0 !#
b0 '#
b0 ##
b0 }"
1~
b101 ""
b1001 !"
b0 ]
b0 p
b0 1"
b11111100101 #
b11111100101 C
b11111100101 T
b11111100101 |
b11111100101 R#
0"
0%
12
#300
02
#305
1{
b110 ""
b101 !"
1"
12
#310
02
#315
b11111100101 l
b111 ""
b11111100101 $
b11111100101 D
b11111100101 U
b11111100101 d
b11111100101 S#
b110 !"
1%
12
#320
02
#325
1n
b111 !"
b11111100101 P
b11111100101 _
b11111100101 k
b11111100101 0#
12
#330
02
#335
b100000000 +
b100000000 6
b100000000 F
b100000000 ;#
1O
12
#340
1*
02
#345
b100000000 +
b100000000 6
b100000000 F
b100000000 ;#
b11111100101 8#
b110 <#
19#
12
#350
b100000000 +
b100000000 6
b100000000 F
b100000000 ;#
15#
1,
02
#355
12
#356
b100000000 4
b100000000 :
#360
b100000000 +
b100000000 6
b100000000 F
b100000000 ;#
05#
b1000 9
0,
0*
02
#365
12
#370
b110 +
b110 6
b110 F
b110 ;#
b10 =
b10 1#
b1000 -
b1000 7
1*
02
#375
12
#380
b110 +
b110 6
b110 F
b110 ;#
15#
1,
02
#385
12
#386
b110 5
b110 4
b110 :
#390
b100000000 +
b100000000 6
b100000000 F
b100000000 ;#
05#
b0 =
b0 1#
b10000 9
b0 -
b0 7
0,
0*
02
#395
12
#400
b0 +
b0 6
b0 F
b0 ;#
b100 =
b100 1#
b10000 -
b10000 7
1*
02
#405
12
#410
15#
1,
02
#415
12
#416
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
b0 :
#420
b100000000 +
b100000000 6
b100000000 F
b100000000 ;#
05#
b0 =
b0 1#
b10100 9
b0 -
b0 7
0,
0*
02
#425
12
#430
b11111100101 +
b11111100101 6
b11111100101 F
b11111100101 ;#
b101 =
b101 1#
b10100 -
b10100 7
1*
02
#435
12
#440
b11111100101 +
b11111100101 6
b11111100101 F
b11111100101 ;#
15#
1,
02
#445
12
#446
b11111100101 3
b11111100101 :
#450
b100000000 +
b100000000 6
b100000000 F
b100000000 ;#
05#
b0 =
b0 1#
b0 -
b0 7
0,
0*
02
#455
12
#460
02
#465
12
#470
02
#475
12
#480
02
#485
12
#490
02
